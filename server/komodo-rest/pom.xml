<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.komodo</groupId>
		<artifactId>komodo-server</artifactId>
		<version>0.0.4-SNAPSHOT</version>
	</parent>

	<artifactId>komodo-rest</artifactId>
	<name>Komodo REST</name>
	<description>Provides RESTful access to the Komodo engine</description>
	<packaging>war</packaging>

	<properties>
		<version.gson>2.2.4</version.gson>
		<version.resteasy>3.0.11.Final</version.resteasy>
		<version.guava>16.0.1</version.guava>
		<version.swagger>1.5.0</version.swagger>
		<version.jaxrs>2.13</version.jaxrs>
		<version.xsom>20130531</version.xsom>
		<version.relaxngDatatype>20020414</version.relaxngDatatype>

		<webapp-dir>${project.artifactId}-${project.version}</webapp-dir>
		<webapp-outdir>${basedir}/target/${webapp-dir}</webapp-outdir>

		<!-- To be injected into swagger index.html -->
		<rest-context>vdb-builder</rest-context>
		<rest-version>v1</rest-version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.sun.xsom</groupId>
				<artifactId>xsom</artifactId>
				<version>${version.xsom}</version>
			</dependency>
			<dependency>
				<groupId>relaxngDatatype</groupId>
				<artifactId>relaxngDatatype</artifactId>
				<version>${version.relaxngDatatype}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${version.gson}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${version.guava}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-bom</artifactId>
				<version>${version.resteasy}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${version.swagger}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-core</artifactId>
				<version>${version.swagger}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-models</artifactId>
				<version>${version.swagger}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-jaxrs</artifactId>
				<version>${version.swagger}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-spi</artifactId>
		</dependency>

		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-utils</artifactId>
		</dependency>

		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-importer</artifactId>
		</dependency>

		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-relational</artifactId>
		</dependency>

		<dependency>
			<groupId>com.sun.xsom</groupId>
			<artifactId>xsom</artifactId>
		</dependency>
		<dependency>
			<groupId>relaxngDatatype</groupId>
			<artifactId>relaxngDatatype</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-json-p-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-models</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
		</dependency>

		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-servlet</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-undertow</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-utils</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-test-utils</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<!-- Set the name of the war, used as the context root when the app is 
			deployed -->
		<finalName>${rest-context}</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Adds integration test directories to resources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<!-- Add integration-test source directory to our build -->
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<!-- Configures the source directory of our integration tests -->
							<sources>
								<source>src/integration-test/java</source>
							</sources>
						</configuration>
					</execution>
					<!-- Add integration-test resource directory to our build -->
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<!-- Configures the resource directory of our integration tests -->
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>src/integration-test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Overrides test configuration to exclude any tests starting IT -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skipTests}</skipTests>

					<!-- Excludes integration tests when unit tests are run -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Creates the war for deployment -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>${rest-context}</warName>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Ensure this never gets added to war and deployed since only required 
						for local testing using tomcat. This works since the tomcat7:run-war uses 
						the exploded version of the war and not the war archive itself. -->
					<packagingExcludes>
						WEB-INF/lib/jaxrs-ri-*.jar
					</packagingExcludes>

					<!-- Avoid filtering certain types of file -->
					<nonFilteredFileExtensions>
						<!-- default value contains jpg,jpeg,gif,bmp,png -->
						<nonFilteredFileExtension>jpg,jpeg,gif,bmp,png,ttf,svg,woff,woff2,eot,map</nonFilteredFileExtension>
					</nonFilteredFileExtensions>

					<!-- Adds the swagger ui files to war, filtering them to include the 
						context -->
					<webResources>
						<resource>
							<directory>api-docs</directory>
							<filtering>true</filtering>
							<targetPath>api-docs</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Downloads jboss as and teiid for integration testing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-for-teiid-testing</id>
						<phase>process-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jboss.as</groupId>
									<artifactId>jboss-as-dist</artifactId>
									<version>${version.org.jboss.as}</version>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.basedir}/lib/jbossas/</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>unpack-teiid</id>
						<phase>process-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jboss.teiid</groupId>
									<artifactId>teiid</artifactId>
									<version>${version.teiid.default}</version>
									<classifier>jboss-dist</classifier>
									<type>zip</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.basedir}/lib/jbossas/${version.jbossas.test}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Downloads resteasy jaxrs from resteasy for use in integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>download-resteasy</id>
						<phase>process-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<property name="version.resteasy" value="${version.resteasy}" />
								<property name="destination.resteasy" value="${project.build.directory}/resteasy" />
								<property name="destination.jboss.modules"
									value="${project.basedir}/lib/jbossas/${version.jbossas.test}/modules/system/layers/base" />
								<ant antfile="${project.basedir}/install-resteasy.xml"
									target="install" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Executes the integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<!-- Invokes both the integration-test and the verify goals -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Skips integration tests -->
							<skipTests>${integration.skipTests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- On clean, remove the jbossas testing directory -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}/lib/jbossas</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>

		<profile>
			<id>jboss</id>

			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<dependencies>
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-jaxrs</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-client</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-json-p-provider</artifactId>
					<scope>provided</scope>
				</dependency>

			</dependencies>
		</profile>

		<!-- Profile that adds in the glassfish jaxrs implementation to execute 
			rest applications in tomcat. Note: this is NOT required when deploying the 
			war to jboss / wildfly. To use do mvn clean -P tomcat-test-server tomcat7:run-war -->
		<profile>
			<id>tomcat-test-server</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<!-- http port -->
							<port>9090</port>
							<!-- application path always starts with / -->
							<path>/${rest-context}</path>
							<systemProperties>
								<!-- adds the var/vdb-builder directory to the project structure -->
								<komodo.dataDir>var/${rest-context}</komodo.dataDir>
							</systemProperties>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<dependencies>
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-jaxrs</artifactId>
				</dependency>
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-client</artifactId>
				</dependency>
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-json-p-provider</artifactId>
				</dependency>

				<!-- Used with tomcat test server as jaxrs implementation -->
				<dependency>
					<groupId>org.glassfish.jersey.bundles</groupId>
					<artifactId>jaxrs-ri</artifactId>
				</dependency>
			</dependencies>

			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>org.glassfish.jersey.bundles</groupId>
						<artifactId>jaxrs-ri</artifactId>
						<version>${version.jaxrs}</version>
					</dependency>
				</dependencies>
			</dependencyManagement>

		</profile>
	</profiles>
</project>
